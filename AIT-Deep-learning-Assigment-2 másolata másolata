{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.6"},"colab":{"name":"AIT-Deep-learning-Assigment-2 másolata másolata","provenance":[{"file_id":"13qOquuTR5KbD6afaj3CC37nzGh9dyjXI","timestamp":1619713895942},{"file_id":"1P2UWpOq0MeWX1k8hpN75PJy8FFLbNwUF","timestamp":1619685994975},{"file_id":"1OaEmw5Tb3BPuofM4MXvHvY2UUVpZaI9m","timestamp":1618499428150},{"file_id":"1WKUmU8_J2z5LK2riPHHM3UN--CNe6Y_C","timestamp":1614867688912},{"file_id":"1PBQqA1DS8BTJU085au18RiEwSSE16U6x","timestamp":1601307491492},{"file_id":"1RMlNYqferL9EpMsZUGvTACS3jBT3QTn2","timestamp":1601147530790},{"file_id":"12VmXMYLoFcxcXmxjg4i0-CBlS_YaaOHJ","timestamp":1601145992713}],"collapsed_sections":[]},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"_jiGtJu6u9ml"},"source":["# Copyright\n","\n","<PRE>\n","Copyright (c) 2021 Bálint Gyires-Tóth - All Rights Reserved\n","You may use and modify this code for research and development purpuses.\n","Use this code for educational purposes (self-paced or instructor led) without the permission of the author is prohibited.\n","</PRE>"]},{"cell_type":"markdown","metadata":{"id":"oXyFC44jV-PP"},"source":["# Author classification\n","The task is to train a 1D CNN or an LSTM that is able to  classify text from two authors. The final model should be able to tell about a text with a given length (e.g. 60 characters) who wrote it. \n","\n","Please write the codes according to the following parts:"]},{"cell_type":"markdown","metadata":{"id":"jCnLoeGrHXsp"},"source":["## Python module imports\n","Import all Python modules that you would need during the Assignment."]},{"cell_type":"code","metadata":{"id":"7itbFGt3HXVT","executionInfo":{"status":"ok","timestamp":1619729865857,"user_tz":-120,"elapsed":5845,"user":{"displayName":"Ágoston Csehi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgNy4J1AAKjRg0IGg0zPVSDlmPt2uk3UXi8JSVY=s64","userId":"04978332902586245461"}}},"source":["import numpy as np\n","import keras\n","import string\n","import gc\n","import pandas\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense, Activation, LSTM\n","from tensorflow.keras.callbacks import EarlyStopping\n","from tensorflow.keras.initializers import GlorotNormal\n","from urllib.request import urlretrieve, urlopen\n","from collections import Counter, OrderedDict\n","from matplotlib import pyplot as plt\n","from sklearn.metrics import confusion_matrix\n","import seaborn as sns"],"execution_count":1,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Hr617tEpHd8R"},"source":["## Data acquisition\n","Seek a possible dataset, you can use any source, e.g.\n","* http://www.gutenberg.org/\n","* https://www.kaggle.com/datasets\n","* https://paperswithcode.com/datasets\n","* if you would like to learn Hungarian, than e.g. https://mek.oszk.hu/\n","\n","You can download the text by hand (e.g. by copy-pasting some parts into txt files) or with Python. "]},{"cell_type":"code","metadata":{"id":"NgkdQxHqHdZB","colab":{"base_uri":"https://localhost:8080/","height":356},"executionInfo":{"status":"ok","timestamp":1619729867987,"user_tz":-120,"elapsed":7958,"user":{"displayName":"Ágoston Csehi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgNy4J1AAKjRg0IGg0zPVSDlmPt2uk3UXi8JSVY=s64","userId":"04978332902586245461"}},"outputId":"121db792-15f5-47c2-830f-989c5c61d950"},"source":["def loadText(url):\n","  file = urlopen(\"http://www.gutenberg.org/\"+url)\n","  text = file.read().decode('utf-8').lower()\n","  file.close()\n","  text = text[2500:len(text)-20000] #the beginning end of the texts contains no relevant information\n","  return text\n","\n","# Books from Jane Austen\n","jane = loadText(\"cache/epub/42671/pg42671.txt\")  #Pride and Prejudice\n","jane += loadText(\"files/161/161-0.txt\")          #Sense and Sensibility\n","# Books from William Shakespeare\n","william = loadText(\"cache/epub/1121/pg1121.txt\") #As You Like It\n","william += loadText(\"cache/epub/1118/pg1118.txt\")#Much Ado About Nothing\n","william += loadText(\"cache/epub/1795/pg1795.txt\")#Macbeth\n","william += loadText(\"cache/epub/1107/pg1107.txt\")#Taming of The Shrew\n","william += loadText(\"cache/epub/1135/pg1135.txt\")#Tempest\n","william += loadText(\"cache/epub/1787/pg1787.txt\")#Hamlet\n","william += loadText(\"cache/epub/1785/pg1785.txt\")#Julius Caesar\n","william += loadText(\"cache/epub/1114/pg1114.txt\")#The Merchant of Venice\n","william += loadText(\"cache/epub/1108/pg1108.txt\")#The Two Gentlemen of Verona\n","william += loadText(\"cache/epub/1793/pg1793.txt\")#Othello\n","william += loadText(\"cache/epub/1125/pg1125.txt\")#All's Well That Ends Well\n","\n","letter_counts = OrderedDict(Counter(jane + william).most_common()) #count character distribution\n","df = pandas.DataFrame.from_dict(letter_counts, orient='index')\n","rareChars = df.loc[(df[0]<200)] #rare, unsignificant characters\n","for c in rareChars.index: #keep numbers, no matter how rare they are\n","  if c in string.digits:\n","    rareChars = rareChars.drop(c)\n","for c in list(rareChars.index)+list(['\\n','\\r']): #delete unwanted characters\n","  df = df.drop(c)\n","  jane = jane.replace(c,'')\n","  william = william.replace(c,'')\n","\n","print('Number of characters from Austen:', len(jane))\n","print('Number of characters from Shakespeare:', len(william))\n","df.plot(kind='bar', figsize = (18,6));"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Number of characters from Austen: 1331583\n","Number of characters from Shakespeare: 1376978\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1296x432 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"cHyE_ndGIblJ"},"source":["## Data loading, labeling and preprocessing\n","Load the data and convert the characters into one-hot encodings. Then load the data into a 3D NumPy array, with a shape of\n","\n","* (batch, sequence_length, alphabet_length)\n","\n","where sequence_length=60, and alphabet_length equals to the number of unique characters in both datasets. The sequences should be cut out from the complete dataset by sliding window. You should add 0 and 1 labels to the sequences, according to the author. \n","\n","Later you may change sequence_length to achieve better results!"]},{"cell_type":"code","metadata":{"id":"arooXt0WIb6x","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619729883574,"user_tz":-120,"elapsed":23539,"user":{"displayName":"Ágoston Csehi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgNy4J1AAKjRg0IGg0zPVSDlmPt2uk3UXi8JSVY=s64","userId":"04978332902586245461"}},"outputId":"fbedb03d-3b49-469e-d39f-53534c1a68cc"},"source":["chars = sorted(list(set(jane + william)))\n","char_indices = dict((c, i) for i, c in enumerate(chars))\n","indices_char = dict((i, c) for i, c in enumerate(chars))\n","num_author = {0: \"Jane Austen\", 1: \"William Shakespeare\"}\n","author_num = {\"Jane Austen\" : 0, \"William Shakespeare\": 1}\n","alphabet_length = len(chars)\n","\n","sequence_length = 90\n","step = 18\n","sentences  = []\n","author = [] # 0 - jane 1 - william\n","#cut out sentences and label them\n","for i in range(0, len(jane)-sequence_length, step):\n","    sentences.append(jane[i:i+sequence_length])\n","    author.append(author_num[\"Jane Austen\"])\n","del jane\n","for i in range(0, len(william)-sequence_length, step):\n","    sentences.append(william[i:i+sequence_length])\n","    author.append(author_num[\"William Shakespeare\"])\n","del william #important, because of insufficient CPU RAM\n","\n","batches = len(sentences)\n","p = np.random.permutation(batches)  #shuffle with indexes, this is a more memory efficent way than sklearn\n","#need to shuffle before splitting\n","X = np.zeros((batches, sequence_length, alphabet_length))\n","Y = np.zeros(batches)\n","for i, sentence in enumerate(sentences):\n","    for t, char in enumerate(sentence): \n","        X[p[i],t,char_indices[char]] = 1  #one-hot encoding\n","        Y[p[i]] = author[i]               #just copying labels with shuffling in mind\n","\n","del author\n","del sentences\n","gc.collect() #memory preservation again..\n","\n","print (\"Shape of the input data:\", X.shape)\n","print (\"Shape of the target data:\", Y.shape)"],"execution_count":3,"outputs":[{"output_type":"stream","text":["Shape of the input data: (150466, 90, 56)\n","Shape of the target data: (150466,)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"lL1Mc8ibHnep"},"source":["## Data splitting\n","Split the data into train, validate and test sets."]},{"cell_type":"code","metadata":{"id":"ELyG9XFUHrkB","executionInfo":{"status":"ok","timestamp":1619729883578,"user_tz":-120,"elapsed":23537,"user":{"displayName":"Ágoston Csehi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgNy4J1AAKjRg0IGg0zPVSDlmPt2uk3UXi8JSVY=s64","userId":"04978332902586245461"}}},"source":["valid_split = 0.1\n","test_split  = 0.1\n","\n","v_point = int(batches*(1-valid_split-test_split))\n","t_point = int(batches*(1-test_split))\n","\n","X_train = X[0:v_point]\n","Y_train = Y[0:v_point]\n","X_valid = X[v_point: t_point]\n","Y_valid = Y[v_point: t_point]\n","X_test  = X[t_point:]\n","Y_test  = Y[t_point:]\n","del X\n","del Y\n","gc.collect();  #and again.."],"execution_count":4,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"hA8U9tr7HrNQ"},"source":["## Model definition\n","Define a 1D CNN or an LSTM for the task. Compile the model with the correct loss function."]},{"cell_type":"code","metadata":{"id":"BT1V1s4kHuUe","colab":{"base_uri":"https://localhost:8080/","height":120},"executionInfo":{"status":"ok","timestamp":1619729885147,"user_tz":-120,"elapsed":25103,"user":{"displayName":"Ágoston Csehi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgNy4J1AAKjRg0IGg0zPVSDlmPt2uk3UXi8JSVY=s64","userId":"04978332902586245461"}},"outputId":"9ddd4953-2416-444d-87ce-e7221220689a"},"source":["model = Sequential()\n","#tried CNN and biderictional layers as well, but LSTM turned out to be the best\n","model.add(LSTM(128, input_shape=(X_train.shape[-2], X_train.shape[-1])))\n","model.add(Dense(1, kernel_initializer=GlorotNormal()))\n","model.add(Activation(\"sigmoid\"))\n","\n","model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])\n","print(f'Trainable variables: {np.sum([np.prod(v.get_shape().as_list()) for v in model.trainable_variables])}') \n","keras.utils.plot_model(model, show_shapes=True, show_layer_names=False, rankdir='LR') #I just like this representation better"],"execution_count":5,"outputs":[{"output_type":"stream","text":["Trainable variables: 94849\n"],"name":"stdout"},{"output_type":"execute_result","data":{"image/png":"\n","text/plain":["<IPython.core.display.Image object>"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"markdown","metadata":{"id":"hWFb-nAMHuAI"},"source":["## Model training\n","Train the model and apply early stopping."]},{"cell_type":"code","metadata":{"id":"dvgKjqp3Hwkp","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1619730200264,"user_tz":-120,"elapsed":340208,"user":{"displayName":"Ágoston Csehi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgNy4J1AAKjRg0IGg0zPVSDlmPt2uk3UXi8JSVY=s64","userId":"04978332902586245461"}},"outputId":"03fff921-1f86-47eb-f518-d096618c3957"},"source":["#takes some time, might need a GPU for this part\n","es = EarlyStopping(patience=10, min_delta=1e-4, verbose=2, restore_best_weights=True)\n","network_history = model.fit(X_train, Y_train,\n","          batch_size=512,\n","          epochs=100,\n","          verbose=2,\n","          validation_data=(X_valid,Y_valid),\n","          callbacks=[es],\n","          shuffle= True)\n","#some feedback\n","plt.figure(figsize=(15,5))\n","plt.xlabel('Epochs')\n","plt.ylabel('Loss')\n","plt.plot(network_history.history['loss'])\n","plt.plot(network_history.history['val_loss'])\n","plt.legend(['Training', 'Validation']);"],"execution_count":6,"outputs":[{"output_type":"stream","text":["Epoch 1/100\n","236/236 - 24s - loss: 0.2661 - accuracy: 0.8984 - val_loss: 0.1908 - val_accuracy: 0.9460\n","Epoch 2/100\n","236/236 - 4s - loss: 0.1892 - accuracy: 0.9427 - val_loss: 0.1469 - val_accuracy: 0.9571\n","Epoch 3/100\n","236/236 - 4s - loss: 0.1252 - accuracy: 0.9609 - val_loss: 0.0925 - val_accuracy: 0.9705\n","Epoch 4/100\n","236/236 - 4s - loss: 0.0792 - accuracy: 0.9734 - val_loss: 0.0558 - val_accuracy: 0.9821\n","Epoch 5/100\n","236/236 - 4s - loss: 0.0553 - accuracy: 0.9834 - val_loss: 0.0352 - val_accuracy: 0.9896\n","Epoch 6/100\n","236/236 - 4s - loss: 0.0421 - accuracy: 0.9882 - val_loss: 0.0364 - val_accuracy: 0.9891\n","Epoch 7/100\n","236/236 - 4s - loss: 0.0316 - accuracy: 0.9911 - val_loss: 0.0338 - val_accuracy: 0.9915\n","Epoch 8/100\n","236/236 - 4s - loss: 0.0305 - accuracy: 0.9914 - val_loss: 0.0230 - val_accuracy: 0.9928\n","Epoch 9/100\n","236/236 - 4s - loss: 0.0236 - accuracy: 0.9935 - val_loss: 0.0267 - val_accuracy: 0.9920\n","Epoch 10/100\n","236/236 - 4s - loss: 0.0234 - accuracy: 0.9935 - val_loss: 0.0191 - val_accuracy: 0.9946\n","Epoch 11/100\n","236/236 - 4s - loss: 0.0193 - accuracy: 0.9949 - val_loss: 0.0161 - val_accuracy: 0.9956\n","Epoch 12/100\n","236/236 - 4s - loss: 0.0174 - accuracy: 0.9950 - val_loss: 0.0148 - val_accuracy: 0.9956\n","Epoch 13/100\n","236/236 - 4s - loss: 0.0178 - accuracy: 0.9951 - val_loss: 0.0169 - val_accuracy: 0.9972\n","Epoch 14/100\n","236/236 - 4s - loss: 0.0148 - accuracy: 0.9961 - val_loss: 0.0165 - val_accuracy: 0.9954\n","Epoch 15/100\n","236/236 - 4s - loss: 0.0123 - accuracy: 0.9967 - val_loss: 0.0104 - val_accuracy: 0.9975\n","Epoch 16/100\n","236/236 - 4s - loss: 0.0120 - accuracy: 0.9968 - val_loss: 0.0095 - val_accuracy: 0.9982\n","Epoch 17/100\n","236/236 - 4s - loss: 0.0090 - accuracy: 0.9976 - val_loss: 0.0092 - val_accuracy: 0.9978\n","Epoch 18/100\n","236/236 - 4s - loss: 0.0127 - accuracy: 0.9969 - val_loss: 0.0083 - val_accuracy: 0.9979\n","Epoch 19/100\n","236/236 - 4s - loss: 0.0074 - accuracy: 0.9982 - val_loss: 0.0080 - val_accuracy: 0.9979\n","Epoch 20/100\n","236/236 - 4s - loss: 0.0099 - accuracy: 0.9974 - val_loss: 0.0094 - val_accuracy: 0.9981\n","Epoch 21/100\n","236/236 - 4s - loss: 0.0070 - accuracy: 0.9982 - val_loss: 0.0093 - val_accuracy: 0.9977\n","Epoch 22/100\n","236/236 - 4s - loss: 0.0080 - accuracy: 0.9979 - val_loss: 0.0110 - val_accuracy: 0.9969\n","Epoch 23/100\n","236/236 - 4s - loss: 0.0067 - accuracy: 0.9983 - val_loss: 0.0059 - val_accuracy: 0.9989\n","Epoch 24/100\n","236/236 - 4s - loss: 0.0064 - accuracy: 0.9982 - val_loss: 0.0049 - val_accuracy: 0.9990\n","Epoch 25/100\n","236/236 - 4s - loss: 0.0073 - accuracy: 0.9981 - val_loss: 0.0062 - val_accuracy: 0.9985\n","Epoch 26/100\n","236/236 - 4s - loss: 0.0062 - accuracy: 0.9984 - val_loss: 0.0063 - val_accuracy: 0.9981\n","Epoch 27/100\n","236/236 - 4s - loss: 0.0072 - accuracy: 0.9979 - val_loss: 0.0122 - val_accuracy: 0.9973\n","Epoch 28/100\n","236/236 - 4s - loss: 0.0057 - accuracy: 0.9986 - val_loss: 0.0076 - val_accuracy: 0.9976\n","Epoch 29/100\n","236/236 - 4s - loss: 0.0052 - accuracy: 0.9986 - val_loss: 0.0085 - val_accuracy: 0.9985\n","Epoch 30/100\n","236/236 - 4s - loss: 0.0045 - accuracy: 0.9989 - val_loss: 0.0035 - val_accuracy: 0.9990\n","Epoch 31/100\n","236/236 - 4s - loss: 0.0039 - accuracy: 0.9989 - val_loss: 0.0042 - val_accuracy: 0.9990\n","Epoch 32/100\n","236/236 - 4s - loss: 0.0044 - accuracy: 0.9989 - val_loss: 0.0050 - val_accuracy: 0.9986\n","Epoch 33/100\n","236/236 - 4s - loss: 0.0203 - accuracy: 0.9940 - val_loss: 0.0058 - val_accuracy: 0.9981\n","Epoch 34/100\n","236/236 - 4s - loss: 0.0058 - accuracy: 0.9984 - val_loss: 0.0045 - val_accuracy: 0.9989\n","Epoch 35/100\n","236/236 - 4s - loss: 0.0035 - accuracy: 0.9992 - val_loss: 0.0037 - val_accuracy: 0.9991\n","Epoch 36/100\n","236/236 - 4s - loss: 0.0036 - accuracy: 0.9990 - val_loss: 0.0107 - val_accuracy: 0.9977\n","Epoch 37/100\n","236/236 - 4s - loss: 0.0064 - accuracy: 0.9984 - val_loss: 0.0038 - val_accuracy: 0.9991\n","Epoch 38/100\n","236/236 - 4s - loss: 0.0026 - accuracy: 0.9994 - val_loss: 0.0034 - val_accuracy: 0.9991\n","Epoch 39/100\n","236/236 - 4s - loss: 0.0018 - accuracy: 0.9995 - val_loss: 0.0030 - val_accuracy: 0.9992\n","Epoch 40/100\n","236/236 - 4s - loss: 0.0022 - accuracy: 0.9995 - val_loss: 0.0076 - val_accuracy: 0.9974\n","Epoch 41/100\n","236/236 - 4s - loss: 0.0032 - accuracy: 0.9992 - val_loss: 0.0033 - val_accuracy: 0.9991\n","Epoch 42/100\n","236/236 - 4s - loss: 0.0021 - accuracy: 0.9994 - val_loss: 0.0032 - val_accuracy: 0.9993\n","Epoch 43/100\n","236/236 - 4s - loss: 0.0013 - accuracy: 0.9997 - val_loss: 0.0043 - val_accuracy: 0.9990\n","Epoch 44/100\n","236/236 - 4s - loss: 0.0037 - accuracy: 0.9990 - val_loss: 0.0039 - val_accuracy: 0.9989\n","Epoch 45/100\n","236/236 - 4s - loss: 0.0028 - accuracy: 0.9992 - val_loss: 0.0038 - val_accuracy: 0.9991\n","Epoch 46/100\n","236/236 - 4s - loss: 0.0028 - accuracy: 0.9994 - val_loss: 0.0043 - val_accuracy: 0.9989\n","Epoch 47/100\n","236/236 - 4s - loss: 0.0029 - accuracy: 0.9992 - val_loss: 0.0024 - val_accuracy: 0.9993\n","Epoch 48/100\n","236/236 - 4s - loss: 0.0020 - accuracy: 0.9994 - val_loss: 0.0028 - val_accuracy: 0.9993\n","Epoch 49/100\n","236/236 - 4s - loss: 0.0019 - accuracy: 0.9994 - val_loss: 0.0023 - val_accuracy: 0.9994\n","Epoch 50/100\n","236/236 - 4s - loss: 0.0023 - accuracy: 0.9994 - val_loss: 0.0024 - val_accuracy: 0.9995\n","Epoch 51/100\n","236/236 - 4s - loss: 0.0022 - accuracy: 0.9994 - val_loss: 0.0034 - val_accuracy: 0.9991\n","Epoch 52/100\n","236/236 - 4s - loss: 0.0014 - accuracy: 0.9996 - val_loss: 0.0026 - val_accuracy: 0.9992\n","Epoch 53/100\n","236/236 - 4s - loss: 9.5422e-04 - accuracy: 0.9998 - val_loss: 0.0017 - val_accuracy: 0.9995\n","Epoch 54/100\n","236/236 - 4s - loss: 0.0014 - accuracy: 0.9996 - val_loss: 0.0105 - val_accuracy: 0.9971\n","Epoch 55/100\n","236/236 - 4s - loss: 0.0024 - accuracy: 0.9993 - val_loss: 0.0032 - val_accuracy: 0.9993\n","Epoch 56/100\n","236/236 - 4s - loss: 0.0019 - accuracy: 0.9994 - val_loss: 0.0023 - val_accuracy: 0.9996\n","Epoch 57/100\n","236/236 - 4s - loss: 0.0018 - accuracy: 0.9995 - val_loss: 0.0019 - val_accuracy: 0.9996\n","Epoch 58/100\n","236/236 - 4s - loss: 8.8652e-04 - accuracy: 0.9998 - val_loss: 0.0012 - val_accuracy: 0.9997\n","Epoch 59/100\n","236/236 - 4s - loss: 6.4176e-04 - accuracy: 0.9998 - val_loss: 0.0015 - val_accuracy: 0.9998\n","Epoch 60/100\n","236/236 - 4s - loss: 2.4716e-04 - accuracy: 1.0000 - val_loss: 0.0028 - val_accuracy: 0.9994\n","Epoch 61/100\n","236/236 - 4s - loss: 0.0019 - accuracy: 0.9995 - val_loss: 0.0039 - val_accuracy: 0.9992\n","Epoch 62/100\n","236/236 - 4s - loss: 0.0033 - accuracy: 0.9991 - val_loss: 0.0029 - val_accuracy: 0.9992\n","Epoch 63/100\n","236/236 - 4s - loss: 7.2262e-04 - accuracy: 0.9998 - val_loss: 0.0016 - val_accuracy: 0.9995\n","Epoch 64/100\n","236/236 - 4s - loss: 3.2639e-04 - accuracy: 0.9999 - val_loss: 0.0017 - val_accuracy: 0.9997\n","Epoch 65/100\n","236/236 - 4s - loss: 5.3797e-04 - accuracy: 0.9998 - val_loss: 0.0047 - val_accuracy: 0.9987\n","Epoch 66/100\n","236/236 - 4s - loss: 7.9383e-04 - accuracy: 0.9998 - val_loss: 0.0018 - val_accuracy: 0.9996\n","Epoch 67/100\n","236/236 - 4s - loss: 0.0016 - accuracy: 0.9995 - val_loss: 0.0014 - val_accuracy: 0.9996\n","Epoch 68/100\n","236/236 - 4s - loss: 5.6680e-04 - accuracy: 0.9998 - val_loss: 0.0018 - val_accuracy: 0.9996\n","Restoring model weights from the end of the best epoch.\n","Epoch 00068: early stopping\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.legend.Legend at 0x7f59f0e70a50>"]},"metadata":{"tags":[]},"execution_count":6},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1080x360 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"0omw2XzSHwOo"},"source":["## Evaluation on test data\n","Evaluate the model on the test data in terms of loss and accuracy."]},{"cell_type":"code","metadata":{"id":"4bF3dQA1Hv_R","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619730204466,"user_tz":-120,"elapsed":344404,"user":{"displayName":"Ágoston Csehi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgNy4J1AAKjRg0IGg0zPVSDlmPt2uk3UXi8JSVY=s64","userId":"04978332902586245461"}},"outputId":"a6389cf0-ca53-4944-ab59-8b36323ff54a"},"source":["loss, acc = model.evaluate(X_test)\n","y_pred = model.predict(X_test)"],"execution_count":7,"outputs":[{"output_type":"stream","text":["471/471 [==============================] - 1s 2ms/step - loss: 0.0000e+00 - accuracy: 0.0000e+00\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"4Y73Q-h5Hz1r"},"source":["## Confusion matrix\n","Calculate and display the confusion matrix."]},{"cell_type":"code","metadata":{"id":"cW8zZi1uJm2B","colab":{"base_uri":"https://localhost:8080/","height":854},"executionInfo":{"status":"ok","timestamp":1619730205120,"user_tz":-120,"elapsed":345046,"user":{"displayName":"Ágoston Csehi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgNy4J1AAKjRg0IGg0zPVSDlmPt2uk3UXi8JSVY=s64","userId":"04978332902586245461"}},"outputId":"a1eb5e5f-0663-4200-a939-ae77d1501cb9"},"source":["y_pred = np.rint(y_pred.reshape(Y_test.size)) #convert guesses to labels\n","y_true = Y_test\n","\n","print(\"\\nConfusion matrix: \")\n","conf=confusion_matrix(y_true, y_pred)\n","\n","plt.figure(figsize=(10,10))\n","sns.heatmap(conf, annot=True, fmt='d', annot_kws={\"size\": 16}, linewidth=10,\n","            yticklabels=num_author.values(),\n","            xticklabels=num_author.values(), vmax=20)\n","plt.xlabel(\"prediction\", fontsize=18) \n","plt.ylabel(\"reference\", fontsize=18)\n","plt.show()\n","\n","#show problematic cases\n","FP = []\n","FN = []\n","TP = []\n","TN = []\n","for i in range(y_true.size):  #sort indexes to confusion matrix categories\n","  if y_pred[i] == 0:\n","    if y_true[i] == 0:\n","      TN.append(i)\n","    else:\n","      FN.append(i)\n","  else:\n","    if y_true[i] == 1:\n","      TP.append(i)\n","    else:\n","      FP.append(i)\n","def onehotToText(oneHotSentence):\n","  sentence = ''\n","  for onehotChar in oneHotSentence:\n","    index = np.argmax(onehotChar)\n","    sentence += indices_char[index]\n","  return sentence\n","print(\"Predicted Jane, but its William's\")\n","for i, oneHotSentence in enumerate(X_test[FN]):\n","  print(f'{i}: {onehotToText(oneHotSentence)}')\n","print(\"Predicted William, but its Jane's\")\n","for i, oneHotSentence in enumerate(X_test[FP]):\n","  print(f'{i}: {onehotToText(oneHotSentence)}')"],"execution_count":8,"outputs":[{"output_type":"stream","text":["\n","Confusion matrix: \n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x720 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}},{"output_type":"stream","text":["Predicted Jane, but its William's\n","Predicted William, but its Jane's\n","0: onal. i shall never reflect on my former acquaintance with    your family in devonshire wi\n","1: uarded in my professions of that    esteem. that i should ever have meant more you will al\n","2:   your's, c.\"mr. darcy's letter to lady catherine, was in a different style; andstill diff\n","3:  round by london upon account of some business, foryou know (nodding significantly and poi\n","4: efore    this engagement is fulfilled. it is with great regret that i obey    your command\n","5: rother has great curiosity to see, but thought i would first    trouble you with these few\n","6: having been more guarded in my professions of that    esteem. that i should ever have mean\n","7:  meant to express, i shall reproach    myself for not having been more guarded in my profe\n","8: d    flatter myself it will not be broken by any mistake or    misapprehension of my actio\n"],"name":"stdout"}]}]}